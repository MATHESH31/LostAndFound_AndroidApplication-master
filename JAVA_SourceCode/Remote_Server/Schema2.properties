create=CREATE DATABASE IF NOT EXISTS LostFound;
use=use LostFound;
category=CREATE TABLE IF NOT EXISTS LostFound.CATEGORY(id INTEGER not NULL AUTO_INCREMENT, CategoryName TEXT, KindName TEXT,PRIMARY KEY (id));
item=CREATE TABLE IF NOT EXISTS LostFound.ITEM(id INTEGER not NULL AUTO_INCREMENT, categoryID INTEGER, Location TEXT, Time TEXT, Correct INTEGER, PRIMARY KEY (id), FOREIGN KEY(categoryID) REFERENCES CATEGORY(id) ON DELETE CASCADE);
questions=CREATE TABLE IF NOT EXISTS LostFound.QUESTIONS(id INTEGER not NULL AUTO_INCREMENT, itemID INTEGER, userID INTEGER, Question_1 TEXT, Question_2 TEXT, Question_3 TEXT, PRIMARY KEY (id), FOREIGN KEY(itemID) REFERENCES ITEM(id) ON DELETE CASCADE, FOREIGN KEY(userID) REFERENCES USER(id) ON DELETE CASCADE);
images=CREATE TABLE IF NOT EXISTS LostFound.IMAGES(id INTEGER not NULL AUTO_INCREMENT, itemID INTEGER, Image_1 BLOB, Image_2 BLOB, PRIMARY KEY (id), FOREIGN KEY(itemID) REFERENCES ITEM(id) ON DELETE CASCADE);
answers=CREATE TABLE IF NOT EXISTS LostFound.ANSWERS(id INTEGER not NULL AUTO_INCREMENT, userID INTEGER, Answer_1 TEXT, Answer_2 TEXT, Answer_3 TEXT, Question_1 TEXT, Question_2 TEXT, Question_3 TEXT, FinderID INTEGER, PRIMARY KEY (id), FOREIGN KEY(userID) REFERENCES USER(id) ON DELETE CASCADE);
user=CREATE TABLE IF NOT EXISTS LostFound.USER(id INTEGER not NULL AUTO_INCREMENT, UserName TEXT, Password TEXT, Contact TEXT, User_IP TEXT, PRIMARY KEY (id));
drop=DROP DATABASE LostFound;
